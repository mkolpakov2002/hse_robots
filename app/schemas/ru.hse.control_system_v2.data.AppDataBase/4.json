{
  "formatVersion": 1,
  "database": {
    "version": 4,
    "identityHash": "a2c7c801b8668c007730e537066157b5",
    "entities": [
      {
        "tableName": "device",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `protocol` TEXT NOT NULL, `protocol_encryption` TEXT NOT NULL, `bluetoothAddress` TEXT NOT NULL, `manufacture` TEXT NOT NULL, `model` TEXT NOT NULL, `wifiAddress` TEXT NOT NULL, `port` INTEGER NOT NULL, `vendorId` INTEGER NOT NULL, `uiClass` TEXT NOT NULL, `uiType` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "protocol",
            "columnName": "protocol",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "protocol_encryption",
            "columnName": "protocol_encryption",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "bluetoothAddress",
            "columnName": "bluetoothAddress",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "manufacture",
            "columnName": "manufacture",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "model",
            "columnName": "model",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "wifiAddress",
            "columnName": "wifiAddress",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "port",
            "columnName": "port",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "vendorId",
            "columnName": "vendorId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uiClass",
            "columnName": "uiClass",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uiType",
            "columnName": "uiType",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "lezhnyovProtocol",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `isPackageData` INTEGER NOT NULL, `name` TEXT NOT NULL, `tagList` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPackageData",
            "columnName": "isPackageData",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tagList",
            "columnName": "tagList",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'a2c7c801b8668c007730e537066157b5')"
    ]
  }
}